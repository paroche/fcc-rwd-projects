@import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&family=Lato&display=swap');
:root {
  --d: "M 60 4.346 C 71 4.346 80 13.973 80 25.738 C 80 58.45 40 74.762 40 75.65299999999999 L 40 75.65299999999999 C 40 74.763 0 58.54 0 25.738 C 0 13.884 9 4.346 20 4.346 C 31.1 4.346 40 10.835 40 22.689 C 40 10.835 48.9 4.346 60 4.346 z";
  /* heart - original */
  --d2: "";
  user-select: none;
}

body {
  text-align: center;
}

#container {
  background-image: linear-gradient(to bottom right, #ffaaaa, #ffeeee, #ffaaaa, #fdd, #ffaaaa, #ffeeee, #ffaaaa, #fdd);
  background-size: cover;
  background-attachment: local;
  background-repeat: no-repeat;
  background-origin: border-box;
  height: 120vh;
  width: 100%;
  overflow: hidden;
}

#svg-heart-container {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0;
  padding: 0;
  padding-top: 2%;
  position: relative;
  /* border: 1px solid green; */
}

#heart-container {
  border-radius: 15px;
  position: relative;
  opacity: 1;
  transition: opacity 10s;
  /* border: 1px solid rgba(223, 8, 8, 1); */
}

#heart-container.faded {
  opacity: 0;
}

#svg-card {
  opacity: 1;
  transition: opacity 4s ease-in;
  transition-timing-function: cubic-bezier(0.0, 0.1, .50, 0.0);
  width: 600px;
  height: 600px;
  border-radius: 10px;
  box-shadow: 2px 2px 6px #444;
  /* border: 1px solid rgb(221, 11, 11); */
}

#svg-card.hidden {
  opacity: 0;
}


/* Gems */

#gems {
  opacity: 1;
  transition: opacity 12s;
}

#gems.hidden {
  opacity: 0;
}

.corner-gem.beat {
  animation: 0.4s ease-in-out 0s infinite gem-beat;
}

@keyframes gem-beat {
  0% {
    transform: scale(1.05) translate(-1%, -1%);
  }
  100% {
    transform: scale(1) translate(0, 0);
  }
}

.fa-gem {
  position: absolute;
  color: silver;
}

#gem-l {
  top: 8%;
  left: 36%;
}

#gem-r {
  top: 8%;
  left: 62.5%;
}

#gem-ur {
  top: 3%;
  right: 3.5%;
  color: rgb(3, 3, 243);
}

#gem-ur3 {
  top: 3%;
  right: 7.5%;
  color: red;
}

#gem-ur2 {
  top: 5.5%;
  right: 5.5%;
  color: rgb(3, 153, 3);
}

#gem-ur4 {
  top: 5.5%;
  right: 1.5%;
  color: rgb(226, 11, 226);
}


/* end Gems */

#ValHeart {
  fill: rgb(255, 0, 0, 0.78);
  animation: none;
}

#ValHeart.beatInPlace {
  fill: red;
  animation: 9s ease-out 1s infinite valHeartBeat
}

@keyframes valHeartBeat {
  0% {
    opacity: 1;
  }
  55% {
    opacity: .2;
  }
  100% {
    opacity: 1;
  }
}

#happy-main {
  z-index: 10;
  /* doesn't work, here or inline */
}

#heartOutG,
#heartInG {
  animation: none;
}

#heartOutG:hover,
#heartInG:hover {
  animation: 1.2s ease-in-out 0s infinite beat;
}

#heartOutG.beat,
#heartInG.beat {
  animation: 1.2s ease-in-out 0s infinite beat;
}

@keyframes beat {
  0% {
    transform: scale(1.2) translate(-1%, -1%);
  }
  100% {
    transform: scale(1) translate(0, 0);
  }
}

.PathText {
  color: white;
  font-size: 12px;
  /* this actually works */
  stroke: red;
  /* So does this */
  text-shadow: 0.5px 0.5px rgb(255, 100, 100);
  transform: translate(-15px, -15px);
}

.PathText:hover {
  stroke: violet;
}


/* Below are for little moving hearts appended to heart-container */

.moving-heart {
  position: absolute;
  /* below (top 15.8%, left 16.0%) works for svg-card (and therefore heart-container) of width 600px w/ 5.1 scale heart path*/
  top: 15.8%;
  left: 16.0%;
  animation: path-animation 40s alternate;
  width: 30px;
  height: auto;
  offset-path: path(var(--d));
  background-color: rgba(255, 200, 200, 0.05);
  border-radius: 50%;
  box-shadow: none;
}

.moving-heart-2 {
  position: absolute;
  /* 38-40%/36% works for svg-card of 500px w/ 2 scale heart path*/
  top: 40%;
  top: 38%;
  left: 36.2%;
  animation: path-animation 30s normal;
  width: 30px;
  height: auto;
  offset-path: path(var(--d2));
  background-color: rgba(255, 200, 200, 0.05);
  border-radius: 50%;
  box-shadow: none;
}


/* below assumes heart paths stay same size (5.1 & 2) */


/* To be able to adjust paths, would have to have JS monitor screen width and adjust d & d1 and also update some vars saying how large they are so can use for a calculation below */

@media (max-width: 730px) {
  #svg-card {
    width: 500px;
    height: 500px;
  }
  .moving-heart {
    top: 10%;
    left: 8.6%;
  }
  .moving-heart-2 {
    top: 38%;
    left: 33%;
  }
}

@keyframes path-animation {
  0% {
    offset-distance: 0;
    offset-rotate: auto;
    offset-rotate: 0;
    opacity: 1;
  }
  50% {
    offset-distance: 200%;
    offset-rotate: auto;
    offset-rotate: 0;
    opacity: 1;
  }
  51% {
    offset-distance: 210%;
    offset-rotate: auto;
    offset-rotate: 0;
    opacity: 0;
  }
  100% {
    offset-distance: 300%;
    offset-rotate: auto;
    offset-rotate: 0;
    opacity: 0;
  }
}

#curved-message {
  position: absolute;
  left: 50%;
  top: 8%;
  /* top: 9%; */
  transform: translateX(-51.5%);
  opacity: 1;
  transition: opacity 7s;
  font: 32px Verdana, Helvetica, Arial, sans-serif;
  /* font-size: 32px; */
  text-shadow: 1px 1px rgb(139, 4, 4);
}

#curved-message.hidden {
  opacity: 0;
}

#curved-message-textpath {
  text-anchor: middle;
  /* start-offset: 50%; */
  /* Had to do startOffset="50%" in html */
}

#lowerRText {
  font-size: 10px;
  opacity: 1;
  transition: opacity 3s;
}

#lowerRText.hidden {
  opacity: 0;
}

#song {
  position: fixed;
  bottom: 2em;
  left: 10%;
  transform: translateX(-50%);
  opacity: 0.1;
}

#click-me {
  position: fixed;
  bottom: 5em;
  left: 5%;
  /* transform: translateX(-50%); */
  /* font-family: 'Dancing Script', Loto; */
  font-weight: bold;
  font-size: 24px;
  opacity: 0.4;
}

#click-me.hidden {
  display: none;
}